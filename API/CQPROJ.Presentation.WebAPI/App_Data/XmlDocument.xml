<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CQPROJ.Presentation.WebAPI</name>
    </assembly>
    <members>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,CQPROJ.Presentation.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,CQPROJ.Presentation.WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},CQPROJ.Presentation.WebAPI.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(CQPROJ.Presentation.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,CQPROJ.Presentation.WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:CQPROJ.Presentation.WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CQPROJ.Presentation.WebAPI.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.AccountController.Login(CQPROJ.Business.Entities.IAccount.Login)">
            <summary>
            Autenticação de um utilizador ||
            Autenticação: Não
            </summary>
            <param name="userRequest"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.AccountController.VerifyToken">
            <summary>
            Verifica a validade do token de um utilizador ||
            Autenticação: Não
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ActionController.Page(System.Int32)">
            <summary>
            Numero de páginas das ações de um utilizador ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ActionController.GetByUser(System.Int32,System.Int32)">
            <summary>
            Página específica das ações de um utilizador ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="userid"></param>
            <param name="pageid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FileController.DownloadPublicImages(System.String)">
            <summary>
            Download de imagem pública ||
            Autenticação: Não
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FileController.DownloadImage(System.String)">
            <summary>
            Download da imagem ||
            Autenticação: Sim
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FileController.DownloadFile(System.String)">
            <summary>
            Download de documento ||
            Autenticação: Sim 
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FileController.UploadImage">
            <summary>
            Cria uma nova imagem||
            Autenticação: Sim
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FileController.UploadPublicImage">
            <summary>
            Cria uma nova imagem pública ||
            Autenticação: Sim
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FileController.UploadFile">
            <summary>
            Cria um novo documento ||
            Autenticação: Sim [
            admin,
            secretary,
            teacher ]
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FloorController.FloorBySchool(System.Int32)">
            <summary>
            Mostra todos os pisos de uma escola ||
            Autenticação: Sim [
            admin,
            assistant
            ]
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FloorController.Single(System.Int32)">
            <summary>
            Mostra os detalhes de um piso ||
            Autenticação: Sim [
            admin,
            assistant
            ]
            </summary>
            <param name="floorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FloorController.Post(CQPROJ.Data.DB.Models.TblFloors)">
            <summary>
            Cria um novo piso ||
            Autenticação: Sim [
            admin
            ]
            </summary>
            <param name="floor"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FloorController.Put(CQPROJ.Data.DB.Models.TblFloors)">
            <summary>
            Altera um piso ||
            Autenticação: Sim [
            admin
            ]
            </summary>
            <param name="floor"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.FloorController.Delete(System.Int32)">
            <summary>
            Elimina um piso ||
            Autenticação: Sim [
            admin
            ]
            </summary>
            <param name="floorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NoticeController.GetNews">
            <summary>
            Apresenta os ultimos 4 anuncios publicados||
            Autenticação: Não
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NoticeController.GetNoticesBySchool(System.Int32,System.Int32)">
            <summary>
            Apresenta os ultimos 12 anuncios da referida pagina duma escola ||
            Autenticação: Não
            </summary>
            <param name="schoolid"></param>
            <param name="pageid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NoticeController.PostNotice(CQPROJ.Data.DB.Models.TblNotices)">
            <summary>
            Cria um novo anuncio ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="newnotice"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NoticeController.PutNotice(CQPROJ.Data.DB.Models.TblNotices)">
            <summary>
            Edita um anuncio ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="editednotice"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NoticeController.DeleteNotice(System.Int32)">
            <summary>
            Elimina um anuncio ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="noticeid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.RoomController.RoomBySchool(System.Int32)">
            <summary>
            Mostra todos as salas de uma escola ||
            Autenticação: Sim
            [   
                admin, 
                assistant 
            ]
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.RoomController.RoomByFloor(System.Int32)">
            <summary>
            Mostra todas as salas de um andar ||
            Autenticação: Sim
            [   
                admin, 
                assistant 
            ]
            </summary>
            <param name="floorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.RoomController.Single(System.Int32)">
            <summary>
            Mostra os detalhes de uma sala ||
            Autenticação: Sim
            </summary>
            <param name="roomid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.RoomController.Post(CQPROJ.Data.DB.Models.TblRooms)">
            <summary>
            Cria uma nova sala ||
            Autenticação: Sim
            [   
                admin 
            ]
            </summary>
            <param name="room"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.RoomController.Put(CQPROJ.Data.DB.Models.TblRooms)">
            <summary>
            Altera uma sala ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="room"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.RoomController.Delete(System.Int32)">
            <summary>
            Elimina uma sala ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="roomid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.SensorByFloor(System.Int32)">
            <summary>
            Mostra os detalhes do sensor de uma sala  ||
            Autenticação: Sim
            [   
                admin, 
                assistant
            ]
            </summary>
            <param name="roomid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.LastRecord(System.Int32)">
            <summary>
            Mostra os últimos valores registados por um sensor ||
            Autenticação: Sim
            [   
                admin, 
                assistant
            ]
            </summary>
            <param name="sensorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.History(System.Int32)">
            <summary>
            Mostra os registos do histórico de um sensor ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="sensorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.Resume(System.Int32)">
            <summary>
            Mostra o resumo dos registos de um sensor ||
            Autenticação: Sim
            [   
                admin,
                assistant
            ]
            </summary>
            <param name="sensorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.Post(CQPROJ.Data.DB.Models.TblSensors)">
            <summary>
            Cria um novo sensor ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="sensor"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.PutProfile(CQPROJ.Data.DB.Models.TblSensors)">
            <summary>
            Altera um sensor ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="sensor"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SensorController.RemoveUser(System.Int32)">
            <summary>
            Apaga o sensor selecionado ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="sensorid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SubjectController.GetSubjectList">
            <summary>
            Apresenta a lista de disciplinas do sistema  ||
            Autenticação: Sim
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SubjectController.GetSubjectById(System.Int32)">
            <summary>
            Apresenta uma disciplina  ||
            Autenticação: Sim
            </summary>
            <param name="subjectid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SubjectController.PostSubject(CQPROJ.Data.DB.Models.TblSubjects)">
            <summary>
            Cria uma disciplina  ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="subject"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SubjectController.PutSubject(CQPROJ.Data.DB.Models.TblSubjects)">
            <summary>
            Altera uma disciplina  ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="subject"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SubjectController.DeleteSubject(System.Int32)">
            <summary>
            Elimina uma disciplina  ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="subjectid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.GetSentNotifs">
            <summary>
            Mostra as tarefas de um utilizador a realizar no presente dia ||
            Autenticação: Sim
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.GetTasks(System.Int32,System.Int32)">
            <summary>
            Mostra as tarefas de um dia de um utilizador ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="userid"></param>
            <param name="dayweek"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.GetRealizations(System.Int32)">
            <summary>
            Lista detalhes de uma tarefa já feita ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="taskid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.Post(CQPROJ.Data.DB.Models.TblTasks)">
            <summary>
            Cria uma nova tarefa ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.Done(System.Int32)">
            <summary>
            Marca uma tarefa como feita ||
            Autenticação: Sim [ apenas o próprio associado à tarefa ]
            </summary>
            <param name="taskid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.Put(CQPROJ.Data.DB.Models.TblTasks)">
            <summary>
            Altera uma tarefa ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TaskController.Delete(System.Int32)">
            <summary>
            Altera uma tarefa ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="taskid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TimeController.TimeByPrimary(System.Int32)">
            <summary>
            Mostra as horas de aulas de uma escola primária ||
            Autenticação: Sim
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TimeController.TimeByKindergarten(System.Int32)">
            <summary>
            Mostra as horas de aulas de um jardim escola ||
            Autenticação: Sim
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TimeController.SingleTime(System.Int32)">
            <summary>
            Retorna o horário de uma hora de aulas ||
            Autenticação: Sim
            </summary>
            <param name="timeid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TimeController.Post(CQPROJ.Data.DB.Models.TblTimes)">
            <summary>
            Cria uma nova hora de aulas ||
            Autenticação: Sim [ admin ]
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TimeController.Put(CQPROJ.Data.DB.Models.TblTimes)">
            <summary>
            Edita uma hora de aulas ||
            Autenticação: Sim [ admin ]
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.TimeController.Delete(System.Int32)">
            <summary>
            Elimina uma hora de aulas ||
            Autenticação: Sim [ admin ]
            </summary>
            <param name="timeid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.Count(System.Int32)">
            <summary>
            Número de páginas por role (50 por página) ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="roleid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.Page(System.Int32,System.Int32)">
            <summary>
            Lista os utilizadores com um role específico na página selecionado ||
            Autenticação: Sim
            [   
                admin,
                secretary
            ]
            </summary>
            <param name="roleid"></param>
            <param name="pageid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.Detail(System.Int32)">
            <summary>
            Mostra os detalhes de um utilizador ||
            Autenticação: Sim
            [   
                admin,
                secretary,
                teacher (se for o proprio),
                student (se for o proprio),
                assistant (se for o proprio),
                guardian (se for o proprio ou um educando seu)
            ]
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.Profile(System.Int32)">
            <summary>
            Mostra o perfil básico de um utilizador ||
            Autenticação: Sim
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.Post(CQPROJ.Business.Entities.IAccount.User)">
            <summary>
            Cria um novo utilizador ||
            Autenticação: Sim
            [   
                admin,
                secretary (excepto se tentar criar um secretario ou administrador)
            ]
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.AddRole(CQPROJ.Business.Entities.IAccount.RoleUser)">
            <summary>
            Define o role de um utilizador ||
            Autenticação: Sim
            [   
                admin,
                secretary (excepto se tentar editar um secretario ou administrador)
            ]
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.RemoveRole(CQPROJ.Business.Entities.IAccount.RoleUser)">
            <summary>
            Apaga o relaciomento entre um utilizador e um role ||
            Autenticação: Sim
            [   
                admin,
                secretary (excepto se tentar eliminar um secretario ou administrador)
            ]
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.Put(CQPROJ.Business.Entities.IAccount.User)">
            <summary>
            Altera o perfil do utilizador ||
            Autenticação: Sim
            [   
                admin,
                secretary,
                teacher (se for o proprio),
                assistant (se for o proprio),
                guardian (se for o proprio ou um educando seu)
            ]
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.UserController.SwitchActivity(System.Int32)">
            <summary>
            Ativa um utilizador ||
            Autenticação: Sim
            [   
                admin,
                secretary (excepto se tentar ativar um secretario ou administrador)
            ]
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.ClassesByTeacher(System.Int32)">
            <summary>
            Mostra as turmas de um professor ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                teacher (se for o próprio)
            ]
            </summary>
            <param name="teacherid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.ClassesByStudent(System.Int32)">
            <summary>
            Mostra as turmas de um estudante ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                student (se for o próprio),
                guardian (se o estudante for um educando seu)
            ]
            </summary>
            <param name="studentid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.ClassesPrimaryBySchool(System.Int32)">
            <summary>
            Mostra todas as turmas de ensino primário de um centro escolar ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.ClassesKindergartenBySchool(System.Int32)">
            <summary>
            Mostra todas as turmas de jardim de infância de um centro escolar ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.StudentsByClass(System.Int32)">
            <summary>
            Mostra todos os alunos de uma turma ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                student (se pertencer à turma), 
                teacher (se pertencer à turma), 
                guardian (se tiver educandos na turma) 
            ]
            </summary>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.TeachersByClass(System.Int32)">
            <summary>
            Mostra os professores de uma turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                student (se pertencer à turma), 
                teacher (se pertencer à turma), 
                guardian (se tiver educandos na turma) 
            ]
            </summary>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.Profile(System.Int32)">
            <summary>
            Mostra o perfil de uma turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                student (se pertencer à turma), 
                teacher (se pertencer à turma), 
                guardian (se tiver educandos na turma) 
            ]
            </summary>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.Post(CQPROJ.Data.DB.Models.TblClasses)">
            <summary>
            Cria uma nova turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="newclass"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.PutProfile(CQPROJ.Data.DB.Models.TblClasses)">
            <summary>
            Altera os dados de uma turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="editedclass"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.SwitchActivity(System.Int32)">
            <summary>
            Altera o estado de actividade de uma turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.AddUser(CQPROJ.Business.Entities.IAccount.ClassUser)">
            <summary>
            Adiciona um utilizador a uma turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="classuser"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ClassController.RemoveUser(CQPROJ.Business.Entities.IAccount.ClassUser)">
            <summary>
            Remove um utilizador de uma turma  ||
            Autenticação: Sim
            [   
                admin, 
                secretary 
            ]
            </summary>
            <param name="classuser"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.DocumentController.DocumentsbyUser(System.Int32)">
            <summary>
            Mostra os documentos de um utilizador ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                teacher (se for o próprio), 
            ]
            </summary>
            <param name="userid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.DocumentController.DocumentsbyClass(System.Int32)">
            <summary>
            Mostra os documentos de uma turma ||
            Autenticação: Sim
            [   admin, 
                secretary, 
                student (se pertencer à turma), 
                teacher (se pertencer à turma), 
                guardian (se tiver educandos na turma) 
            ]
            </summary>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.DocumentController.Post(CQPROJ.Data.DB.Models.TblDocuments)">
            <summary>
            Cria um documento novo ||
            Autenticação: Sim
            [   admin, 
                secretary,  
                teacher
            ]
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.DocumentController.Put(CQPROJ.Data.DB.Models.TblDocuments)">
            <summary>
            Altera um documento ||
            Autenticação: Sim
            [   admin (se o tiver inserido), 
                secretary (se o tiver inserido),  
                teacher (se o tiver inserido)
            ]
            </summary>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.DocumentController.Delete(System.Int32)">
            <summary>
            Elimina um documento ||
            Autenticação: Sim
            [   admin (se o tiver inserido), 
                secretary (se o tiver inserido),  
                teacher (se o tiver inserido)
            ]
            </summary>
            <param name="documentid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.GetbyClass(System.Int32)">
            <summary>
            Mostra as avaliações de uma turma  ||
            Autenticação: Sim
            [   admin, 
                secretary, 
                student (se pertencer à turma), 
                teacher (se pertencer à turma), 
                guardian (se tiver educandos na turma) 
            ]
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.GetbyTeacher(System.Int32)">
            <summary>
            Mostra as avaliações de uma disciplina  ||
            Autenticação: Sim
            [   admin, 
                secretary, 
                teacher (se for o próprio)
            ]
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.GetGrades(System.Int32)">
            <summary>
            Mostra a nota numa avaliação de um utilizador  ||
            Autenticação: Sim
            [   admin, 
                secretary, 
                student, 
                teacher, 
                guardian 
            ]
            </summary>
            <param name="evaluationid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.Post(CQPROJ.Data.DB.Models.TblEvaluations)">
            <summary>
            Cria uma avaliação  ||
            Autenticação: Sim
            [   teacher (se pertencer à turma)
            ]
            </summary>
            <param name="evaluation"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.Put(CQPROJ.Data.DB.Models.TblEvaluations)">
            <summary>
            Altera uma avaliação  ||
            Autenticação: Sim
            [   
                teacher (se for uma avaliação criada pelo próprio), 
            ]
            </summary>
            <param name="evaluation"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.PostGrade(CQPROJ.Data.DB.Models.TblEvaluationStudents)">
            <summary>
            Atribui nota a um aluno  ||
            Autenticação: Sim
            [   
                teacher (se for uma avaliação criada pelo próprio), 
            ]
            </summary>
            <param name="grade"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.EvaluationController.PutGrade(CQPROJ.Data.DB.Models.TblEvaluationStudents)">
            <summary>
            Edita a nota de um aluno  ||
            Autenticação: Sim
            [   
                teacher (se for uma avaliação criada pelo próprio), 
            ]
            </summary>
            <param name="grade"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ParentingController.GetGuardians(System.Int32)">
            <summary>
            Mostra os encarregados de educação de um estudante ||
            Autenticação: Sim
            [
                admin,
                secretary,
                teacher  
            ]
            </summary>
            <param name="studentid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ParentingController.Add(CQPROJ.Business.Entities.IAccount.Parenting)">
            <summary>
            Cria uma relação entre o encarregado de educação e o estudante ||
            Autenticação: Sim
            [
                admin,
                secretary 
            ]
            </summary>
            <param name="parenting"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ParentingController.Remove(CQPROJ.Business.Entities.IAccount.Parenting)">
            <summary>
            Apaga a relação entre o encarregado de educação e o estudante ||
            Autenticação: Sim
            [
                admin,
                secretary 
            ]
            </summary>
            <param name="parenting"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.LessonsBySubject(System.Int32,System.Int32)">
            <summary>
            Mostra as lições de uma disciplina de uma turma ||
            Autenticação: Sim
            [   admin, 
                secretary, 
                student (se pertencer à turma), 
                teacher (se pertencer à turma), 
                guardian (se tiver educandos na turma) 
            ]
            </summary>
            <param name="subjectid"></param>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.GetLessonsByStudent(System.Int32)">
            <summary>
            Mostra a lição selecionada, vista de estudante ||
            Autenticação: Sim
            [ 
                student
            ]
            </summary>
            <param name="lessonid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.GetLessonsByTeacher(System.Int32)">
            <summary>
            Mostra a lição selecionada, vista de professor ||
            Autenticação: Sim
            [   admin, 
                secretary, 
                teacher (se pertencer à turma da lição)
            ]
            </summary>
            <param name="lessonid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.GetLessonsByGuardian(System.Int32)">
            <summary>
            Mostra a lição selecionada, vista de encarregado de educação ||
            Autenticação: Sim
            [
                guardian (se tiver educandos na turma da lição)
            ]
            </summary>
            <param name="lessonid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.PostLesson(CQPROJ.Data.DB.Models.TblLessons)">
            <summary>
            Cria uma lição ||
            Autenticação: Sim
            [
                teacher (se pertencer à turma da lição)  
            ]
            </summary>
            <param name="lesson"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.PostFaults(CQPROJ.Data.DB.Models.TblLessonStudents)">
            <summary>
            Marca as faltas numa lição ||
            Autenticação: Sim
            [
                teacher (se pertencer à turma da lição)  
            ]
            </summary>
            <param name="lesson"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.PutLesson(CQPROJ.Data.DB.Models.TblLessons)">
            <summary>
            Altera os detalhes de uma lição ||
            Autenticação: Sim
            [
                teacher (se pertencer à turma da lição)  
            ]
            </summary>
            <param name="lesson"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.LessonController.PutFaults(CQPROJ.Data.DB.Models.TblLessonStudents)">
            <summary>
            Altera as faltas marcadas para uma lição ||
            Autenticação: Sim
            [
                teacher (se pertencer à turma da lição)
            ]
            </summary>
            <param name="lesson"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.NotifsSent(System.Int32)">
            <summary>
            Lista as notificações enviadas de forma paginada
            </summary>
            <param name="pageid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.NotifsUnreadCount">
            <summary>
            Retorna o número de notificações por ler
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.NotifMessage(System.Int32)">
            <summary>
            Mostra os detalhes de uma notificação selecionada
            </summary>
            <param name="notifid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.NotifsReceived(System.Int32)">
            <summary>
            Mostra as notificações recebidade de forma paginada
            </summary>
            <param name="pageid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.ValidsByNotif(System.Int32)">
            <summary>
            Mostra as validações enviadas numa notificação
            </summary>
            <param name="notifid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.SendToUser(CQPROJ.Business.Entities.NotificationUser)">
            <summary>
            Envia notificações para um utilizador
            </summary>
            <param name="notification"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.SendToClass(CQPROJ.Business.Entities.NotificationClass)">
            <summary>
            Envia uma notificação para todos os membros de uma turma
            </summary>
            <param name="notification"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.Read(System.Int32)">
            <summary>
            Marca como lida uma notificação
            </summary>
            <param name="notifid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.NotificationController.Accept(System.Int32)">
            <summary>
            Aceita a validação de uma notificação
            </summary>
            <param name="notifid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.ScheduleByTeacher(System.Int32)">
            <summary>
            Retorna o horário de um professor ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                teacher (se for o prórpio)
            ]
            </summary>
            <param name="teacherid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.ScheduleByClass(System.Int32)">
            <summary>
            Mostra o horário de uma turma ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                student (se pertencer à turma),
                guardian (se um educando pertencer à turma)
            ]
            </summary>
            <param name="classid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.GetScheduleByRoom(System.Int32)">
            <summary>
            Mostra o horário de aulas de uma sala ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="roomid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.GetSchedule(System.Int32)">
            <summary>
            Mostra os detalhes de um horário  ||
            Autenticação: Sim
            [   
                admin, 
                secretary,
                teacher (se pertencer à turma do horário),
                student (se pertencer à turma do horário),
                guardian (se um educando pertencer à turma do horário)
            ]
            </summary>
            <param name="scheduleid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.PostSchedule(CQPROJ.Data.DB.Models.TblSchedules)">
            <summary>
            Cria uma aula  ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.PutSchedule(CQPROJ.Data.DB.Models.TblSchedules)">
            <summary>
            Altera uma aula  ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="schedule"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.ScheduleController.DeleteSchedule(System.Int32)">
            <summary>
            Elimina uma aula  ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="scheduleid"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SchoolController.Get">
            <summary>
            Mostra todas as escolas  ||
            Autenticação: Não
            </summary>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SchoolController.Get(System.Int32)">
            <summary>
            Mostra os detalhes de uma escola ||
            Autenticação: Não
            </summary>
            <param name="schoolID"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SchoolController.Post(CQPROJ.Data.DB.Models.TblSchools)">
            <summary>
            Cria uma nova escola ||
            Autenticação: Sim
            [   
                admin, 
                secretary
            ]
            </summary>
            <param name="school"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SchoolController.Put(CQPROJ.Data.DB.Models.TblSchools)">
            <summary>
            Altera uma escola ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="school"></param>
            <returns></returns>
        </member>
        <member name="M:CQPROJ.Presentation.WebAPI.Controllers.SchoolController.Delete(System.Int32)">
            <summary>
            Elimina uma escola ||
            Autenticação: Sim
            [   
                admin
            ]
            </summary>
            <param name="schoolid"></param>
            <returns></returns>
        </member>
    </members>
</doc>
